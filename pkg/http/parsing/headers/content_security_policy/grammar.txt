root = serialized-policy
optional-ascii-whitespace = *( %x09 / %x0A / %x0C / %x0D / %x20 )
required-ascii-whitespace = 1*( %x09 / %x0A / %x0C / %x0D / %x20 )
serialized-policy = serialized-directive *( optional-ascii-whitespace ";" [ optional-ascii-whitespace serialized-directive ] )
serialized-directive = directive-name [ required-ascii-whitespace directive-value ]
directive-name       = 1*( ALPHA / DIGIT / "-" )
directive-value      = *( required-ascii-whitespace / ( %x21-2B / %x2D-3A / %x3C-7E ) )
serialized-source-list = ( source-expression *( required-ascii-whitespace source-expression ) ) / "'none'"
source-expression      = scheme-source / host-source / keyword-source / nonce-source / hash-source
scheme-source = scheme-part ":"
host-source = [ scheme-part "://" ] host-part [ ":" port-part ] [ path-part ]
scheme-part = scheme
scheme      = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )
host-part   = "*" / [ "*." ] 1*host-char *( "." 1*host-char ) [ "." ]
host-char   = ALPHA / DIGIT / "-"
port-part   = 1*DIGIT / "*"
path-part   = path-absolute
path-absolute = "/" [ segment-nz *( "/" segment ) ]
segment-nz    = 1*pchar
segment       = *pchar
pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
pct-encoded   = "%" HEXDIG HEXDIG
sub-delims  = "!" / "$" / "&" / "'" / "(" / ")" / "*" / "+" / "="
keyword-source = "'self'" / "'unsafe-inline'" / "'unsafe-eval'" / "'strict-dynamic'" / "'unsafe-hashes'" / "'report-sample'" / "'unsafe-allow-redirects'" / "'wasm-unsafe-eval'"
nonce-source  = "'nonce-" base64-value "'"
base64-value  = 1*( ALPHA / DIGIT / "+" / "/" / "-" / "_" ) *2"="
hash-source    = "'" hash-algorithm "-" base64-value "'"
hash-algorithm = "sha256" / "sha384" / "sha512"
token = 1*tchar
tchar = "!" / "#" / "$" / "%" / "&" / "'" / "*" / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~" / DIGIT / ALPHA
ancestor-source-list-root = ancestor-source-list
ancestor-source-list = ( ancestor-source *( required-ascii-whitespace ancestor-source) ) / "'none'"
ancestor-source = scheme-source / host-source / ancestor-keyword-source
ancestor-keyword-source = "'self'"
gen-delims = ":" / "/" / "?" / "#" / "[" / "]" / "@"
reserved = gen-delims / sub-delims
fragment = *( pchar / "/" / "?" )
query = *( pchar / "/" / "?" )
segment-nz-nc = 1*( unreserved / pct-encoded / sub-delims / "@" )
path-empty = ""
path-rootless = segment-nz *( "/" segment )
path-noscheme = segment-nz-nc *( "/" segment )
path-abempty = *( "/" segment )
path = path-abempty / path-absolute / path-noscheme / path-rootless / path-empty
reg-name = *( unreserved / pct-encoded / sub-delims)
dec-octet = DIGIT / %x31-39 DIGIT / "1" 2DIGIT / "2" %x30-34 DIGIT / "25" %x30-35
IPv4address = dec-octet "." dec-octet "." dec-octet "." dec-octet
h16 = 1*4HEXDIG
ls32 = ( h16 ":" h16 ) / IPv4address
IPv6address = 6( h16 ":" ) ls32 / "::" 5( h16 ":" ) ls32 / [ h16 ] "::" 4( h16 ":" ) ls32 / [ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32 / [ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32 / [ *3( h16 ":" ) h16 ] "::" h16 ":" ls32 / [ *4( h16 ":" ) h16 ] "::" ls32 / [ *5( h16 ":" ) h16 ] "::" h16 / [ *6( h16 ":" ) h16 ] "::"
IPvFuture = "v" 1*HEXDIG "." 1*( unreserved / sub-delims / ":" )
IP-literal = "[" ( IPv6address / IPvFuture ) "]"
port = *DIGIT
host = IP-literal / IPv4address / reg-name
userinfo = *( unreserved / pct-encoded / sub-delims / ":" )
authority = [ userinfo "@" ] host [ ":" port ]
relative-part = "//" authority path-abempty / path-absolute / path-noscheme / path-empty
relative-ref = relative-part [ "?" query ] [ "#" fragment ]
hier-part = "//" authority path-abempty / path-absolute / path-rootless / path-empty
absolute-URI = scheme ":" hier-part [ "?" query ]
URI = scheme ":" hier-part [ "?" query ] [ "#" fragment ]
uri-reference = URI / relative-ref
sandbox-directive-value-root = sandbox-directive-value
sandbox-directive-value = "" / token *( required-ascii-whitespace token )
report-uri-directive-value-root = report-uri-directive-value
report-uri-directive-value = uri-reference *( required-ascii-whitespace uri-reference )
require-trusted-types-for-directive-value-root = trusted-types-sink-group-keyword
trusted-types-sink-group-keyword = "'" trusted-types-sink-group "'"
trusted-types-sink-group = "script"
trusted-types-directive-value-root = serialized-tt-configuration
serialized-tt-configuration = ( tt-expression *( required-ascii-whitespace tt-expression ) )
tt-expression = tt-policy-name  / tt-keyword / tt-wildcard
tt-wildcard = "*"
tt-policy-name = 1*( ALPHA / DIGIT / "-" / "#" / "=" / "_" / "/" / "@" / "." / "%")
tt-keyword = "'allow-duplicates'" / "'none'"
